{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"],"fields":{"title":{"boost":1000.0},"text":{"boost":1.0},"tags":{"boost":1000000.0}}},"docs":[{"location":"","title":"Iolanta is a  visualization framework","text":"<p>Here is how you use it:</p> <ul> <li> <p> Write code</p> <p>As plain text in  YAML format</p> </li> <li> <p> Run Iolanta</p> <p>Against the files you and others had written</p> </li> <li> <p> Get visualizations!</p> <p>In various formats:  Markdown,  HTML,  SVG,  PNG, \u2026 and more!</p> </li> </ul>"},{"location":"#tables","title":"Tables","text":"earth-like-planets.yaml<pre><code>$id: earth-like-planets\ntable:columns:\n- name\n- radius\n- rdfs:label: Weather\ntable:columns:\n- atmosphere\n- $id: temperatures\nrdfs:label: \"t (\u00b0C)\"\ntable:rows:\n- name: Mercury\nradius: 2439\natmosphere: no\ntemperatures: -20\u2026430\n- name: Venus\nradius: 6051\natmosphere: yes\ntemperatures: 438\u2026482\n- name: Earth\nradius: 6371\natmosphere: yes\ntemperatures: -89\u202656\n</code></pre> Name Radius Weather Atmosphere t (\u00b0C) Mercury 2439 \u274c -20\u2026430 Venus 6051 \u2714\ufe0f 438\u2026482 Earth 6371 \u2714\ufe0f -89\u202656"},{"location":"#roadmaps","title":"Roadmaps","text":"matrix.yaml<pre><code>roadmap:roadmap:\n- $id: matrix\ntitle: The End\nis-blocked-by:\n- title: Wake up in the Matrix\nis-blocked-by: blue-pill\n- title: Meet the Architect\nis-blocked-by:\ntitle: Save Morpheus\nis-blocked-by:\n- red-pill\nbranches:\n- title: Back \u2192 Source \u2014 and Trinity dies\n- title: Door \u2192 Matrix in hope to save Trinity\n\n- title: Go down the rabbit hole\nblocks:\n- title: Take a pill\nbranches:\n- title: Red\n$id: red-pill\n- title: Blue\n$id: blue-pill\n</code></pre> %3 file_///home/runner/work/iolanta-tech/iolanta-tech/docs/roadmap/examples/matrix.yaml/b3 \u22bb Meet the Architect Back \u2192 Source \u2014 and Trinity dies Door \u2192 Matrix in hope to save Trinity local_matrix The End file_///home/runner/work/iolanta-tech/iolanta-tech/docs/roadmap/examples/matrix.yaml/b3:e-&gt;local_matrix:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/roadmap/examples/matrix.yaml/b7 \u22bb Take a pill Blue Red file_///home/runner/work/iolanta-tech/iolanta-tech/docs/roadmap/examples/matrix.yaml/b2 Wake up in the Matrix file_///home/runner/work/iolanta-tech/iolanta-tech/docs/roadmap/examples/matrix.yaml/b7:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/roadmap/examples/matrix.yaml/b2:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/roadmap/examples/matrix.yaml/b6 Save Morpheus file_///home/runner/work/iolanta-tech/iolanta-tech/docs/roadmap/examples/matrix.yaml/b7:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/roadmap/examples/matrix.yaml/b6:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/roadmap/examples/matrix.yaml/b1 Go down the rabbit hole file_///home/runner/work/iolanta-tech/iolanta-tech/docs/roadmap/examples/matrix.yaml/b1:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/roadmap/examples/matrix.yaml/b7:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/roadmap/examples/matrix.yaml/b2:e-&gt;local_matrix:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/roadmap/examples/matrix.yaml/b6:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/roadmap/examples/matrix.yaml/b3:w"},{"location":"File/","title":"iolanta:File","text":"<p>Class to describe files in a MkDocs installation.</p>"},{"location":"File/#example-instances-of-iolantafile-on-this-site","title":"Example: instances of <code>iolanta:File</code> on this site","text":"iolanta.tech mkdocs.iolanta.tech"},{"location":"ide/","title":"IDEs for <code>Iolanta</code>","text":""},{"location":"title/","title":"mkdocs:title","text":"<p>Alias</p> <p>This keyword is also available as <code>title</code>, without the <code>mkdocs:</code> prefix.</p> <p>Define a readable title for:</p> <ul> <li>a MkDocs page,</li> <li>a table column,</li> <li>or anything else.</li> </ul> arda-countries.yaml<pre><code>$id: arda-countries\n\ntable:columns:\n- $id: country-name\ntitle: Name of the country\n\ntable:rows:\n- country-name: Angmar\n$id: angmar\n- country-name: Mordor\n- country-name: Gondor\n</code></pre> Name of the country Angmar Mordor Gondor"},{"location":"blog/","title":"Blog","text":"<p>{{ blog_content }}</p>"},{"location":"blog/anything-ld/","title":"-LD","text":"<p>Abstract</p> <p>Review of available &amp; future serialization formats for Linked Data.</p>"},{"location":"blog/anything-ld/#endemic-formats","title":"Endemic formats","text":"Popularity Turtle N3 TriG"},{"location":"blog/anything-ld/#mapped-formats","title":"Mapped formats","text":"Underlying format Linked Data format Underlying format Underlying format popularity Popularity CBOR CBOR-LD XML RDF/XML JSON JSON-LD Protobuf Protobuf-LD YAML YAML-LD Parquet Parquet-LD Avro Avro-LD CSV CSV-LD"},{"location":"blog/autocomplete/","title":"Use \u2026 for autocomplete @ VS Code","text":""},{"location":"blog/autocomplete/#context","title":"Context","text":"<p>YAML autocomplete in VS Code is a requirement for any kind of an adequate developer experience. SaaS Clickops tools provide that kind of experience via sleek UIs, the option we, by design, do not have. We have to provide adequate code editing experience instead.</p> %3 file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b9 \u22bb Before implementing LSP, use JSON Schema as an intermediate solution? True False local_json-ld-lsp JSON-LD LSP file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b9:e-&gt;local_json-ld-lsp:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b1 Autocomplete local_ultimate-iolanta-ide Ultimate Iolanta IDE file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b1:e-&gt;local_ultimate-iolanta-ide:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b11 Request having RedHat YAML insatlled file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b11:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b9:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b12 Any luck with https: //blogs.pjjk.net/phi l/json-schema-for- json-ld/ file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b12:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b9:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b13 Try out remark-lint- frontmatter-schema for Markdown frontmatter file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b13:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b9:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b14 Automatically set up the IDE file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b14:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b9:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b2 jeeves-generate file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b2:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b14:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b3 iolanta-json-schema file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b3:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b9:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b4 Look at https://gith ub.com/holodex/schem a-jsonld-context file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b4:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b3:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b6 Try out JSON-LD LSP file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b6:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b9:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b7 Go to definition file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b7:e-&gt;local_ultimate-iolanta-ide:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b8 Find usages file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b8:e-&gt;local_ultimate-iolanta-ide:w local_json-ld-lsp:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b7:w local_json-ld-lsp:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/autocomplete.md/b8:w"},{"location":"blog/autocomplete/#decision","title":"Decision","text":"<p>\u2026</p>"},{"location":"blog/autocomplete/#consequences","title":"Consequences","text":"<p>\u2026</p>"},{"location":"blog/jetbrains/","title":"Setting up JetBrains IDEs for Iolanta","text":""},{"location":"blog/jetbrains/#syntax-highlighting-for-yamlld-jsonld-files","title":"Syntax highlighting for <code>.yamlld</code> &amp; <code>.jsonld</code> files","text":"<ul> <li>Right-click on a <code>.yamlld</code> file in PyCharm Project panel</li> <li>Choose <code>Associate with File Type...</code> in the context menu</li> <li>Choose <code>YAML</code> in the popup window</li> <li>Click <code>OK</code></li> </ul> <p>Procedure for <code>.jsonld</code> files is analogous.</p>"},{"location":"blog/pivot/","title":"Pivot: Visualization system \u2192 Knowledge As Code workspace","text":""},{"location":"blog/pivot/#context","title":"Context","text":"<p>At this moment, Iolanta is called a \"Linked Data visualization framework\". From this name, no particular target audience is evident.</p> <ul> <li>What is Linked Data? \u2014 pretty much no one knows, and those who know believe this is something esoteric</li> <li>What is a visualization framework? \u2014 from these words, a software developer will infer a meaning which has nothing in common with what Iolanta actually is.</li> </ul>"},{"location":"blog/pivot/#decision","title":"Decision","text":"<p>Iolanta is now a Knowledge as Code workspace. Its nearest competitor is Notion. Its comparative advantage is that it manages knowledge in code rather than via ClickOps. Its primary use case at this point is documentation for software projects, because: </p> <ul> <li>Notion already has penetrated that space and we have a base to jump start from</li> <li>Software projects are managed by developers, and developers know why code rulez</li> </ul>"},{"location":"blog/pivot/#consequences","title":"Consequences","text":"<p> %3 <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/pivot.md/b0 Research whether there are Notion As Code projects already </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/pivot.md/b1 Choose Notion use case(s) to reproduce </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/pivot.md/b2 Abstract \u2192 AIST Conf </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/pivot.md/b3 Rebuild the front page </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/pivot.md/b4 <code>{{ render() }}</code> \u2192 <code>{{ iolanta() }}</code> or some kind of a DSL </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/pivot.md/b5 Editing experience </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/pivot.md/b6 Shorthand for $reverse + rdf:type </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/pivot.md/b7 Import from Notion </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/pivot.md/b8 Support CSV-LD </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/pivot.md/b8:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/pivot.md/b7:w </p>"},{"location":"blog/type/","title":"<code>rdf:type</code> vs <code>\"@type\"</code>/<code>$type</code>","text":"<p>These two methods both are used to specify types, but they're not interchangeable.</p> Keyword Context Usage Example Describe type inline Specify Types of Literals? $type | @type JSON-LD Sets data type of a node or value. \u274c \u2714\ufe0f rdf:type RDF States a resource is an instance of a class. \u2714\ufe0f \u274c"},{"location":"blog/why-linked-data/","title":"Why Linked Data?","text":"%3 local_survive-iii-millenium \u22bb Is humanity still alive by year 3000? \u2705 \u274c file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b1 Humanity is facing a number of existential threats local_long-term-planning Do large-scale long- term planning with RDF file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b1:e-&gt;local_long-term-planning:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b3 Conserve resources file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b3:e-&gt;local_survive-iii-millenium:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b4 Take climate change under control file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b4:e-&gt;local_survive-iii-millenium:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b5 Produce energy sustainably file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b5:e-&gt;local_survive-iii-millenium:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b6 Be at peace file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b6:e-&gt;local_survive-iii-millenium:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b7 \u2026 file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b7:e-&gt;local_survive-iii-millenium:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b9 Build The Library in RDF file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b9:e-&gt;local_survive-iii-millenium:w local_long-term-planning:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b3:w local_long-term-planning:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b4:w local_long-term-planning:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b5:w local_long-term-planning:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b6:w local_long-term-planning:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/blog/why-linked-data.md/b7:w"},{"location":"facets/bool/","title":"Bool","text":"<p>Render boolean values.</p> <p>bool.md<pre><code>---\ntitle: Bool\n$included:\n$id: bool-table\ntable:columns:\n- boolean-value\ntable:rows:\n- boolean-value: true\n- boolean-value: false\n- boolean-value: yes\n- boolean-value: no\n---\n\nRender boolean values.\n\n{{ render('bool-table', environments='side-by-side') }}\n\n## Code\n</code></pre> iolanta.facets.html.bool_literal.BoolLiteral <pre><code>\n</code></pre></p> Boolean value \u2714\ufe0f \u274c \u2714\ufe0f \u274c"},{"location":"facets/bool/#code","title":"Code","text":"<pre><code>iolanta.facets.html.bool_literal.BoolLiteral\n</code></pre>"},{"location":"jinja2/","title":"iolanta-jinja2","text":"<pre><code>pip install iolanta-jinja2\n</code></pre>"},{"location":"jinja2/render/","title":"{{ render(\u2026) }}","text":"<p>Render a link to an MkDocs page, a table, or any other object in <code>iolanta</code> ecosystem by its identifier.</p> <pre><code>{{ render('country-name') }}\n</code></pre> <p>\u21d2</p> <p>Name of the country</p> <p>The system automatically determines type of the referenced object and the methods to render it with.</p>"},{"location":"jinja2/render/#macros-plugin","title":"<code>macros</code> plugin","text":"<p><code>mkdocs-macros-plugin</code> must be configured at <code>mkdocs.yml</code> for <code>render()</code> to work. See Install for details.</p>"},{"location":"project/","title":"Project","text":"<ul> <li> <p> Iolanta: Linked Data authoring and ontology-based visualization system</p> <p>Iolanta technology described for Linked Data specialists.</p> </li> <li> <p> Roadmap</p> <p>Nearest plans for project development.</p> </li> </ul>"},{"location":"project/roadmap/","title":"Roadmap","text":"<p> %3 <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b122 Submit iolanta.tech use case </p> <p> local_feedback-yaml-ld Get feedback for iolanta.tech from YAML-LD community </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b122:e-&gt;local_feedback-yaml-ld:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b123 Add use cases to the front page \u2014 python, cli, and mkdocs </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b123:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b122:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b38 tables/project/facet s page is garbage </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b38:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b122:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b39 ChatGPT does not like the front page </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b39:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b122:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b40 Clear Introduction </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b40:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b39:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b41 Navigation </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b41:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b39:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b42 Visual Appeal </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b42:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b39:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b43 Examples </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b43:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b39:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b44 Calls to Action </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b44:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b39:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b45 Design and Layout </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b45:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b39:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b46 Footer </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b46:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b39:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b47 Document how data might be shared among visualizations </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b47:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b40:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b51 Roadmap link from the front page is broken </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b51:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b122:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b52 Implement roadmap/index.md </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b52:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b51:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b53 table:columns page does not document nested columns </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b53:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b122:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b54 Show how to use $reverse </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b54:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b122:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b55 rdf:type page is missing </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b55:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b54:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b56 Vocabularies home page is empty </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b56:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b122:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b57 Need a picture on iolanta.tech home page </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b57:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b122:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b58 Too many lines in YAML snippets on the home page </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b58:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b122:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b59 Cut lines based on information in a viewpoint node </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b59:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b58:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b60 Do ADRs using built- in tools of mkdocs- material </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b60:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b122:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b61 Mark rows as green </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b61:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b122:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b62 How to customize HTML attributes </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b62:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b122:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b63 Is there an RDF vocabulary for HTML to use for environments and stuff? </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b63:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b122:w </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b64 Make proper blog page </p> <p> file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b64:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/roadmap.yaml/b122:w </p>"},{"location":"project/whitepaper/","title":"Iolanta: Linked Data authoring and ontology-based visualization system","text":"<p>Linked Data \u22c5 JSON-LD \u22c5 YAML-LD \u22c5 Data Visualization</p> <p>Abstract</p> <p>Purpose: Linked Data in its raw form, as a collection of triples (or quads) \u2014 is arguably not easily comprehensible for a human being. Linked Data visualization is a conversion from triples to something more visual (table, chart, \u2026) \u2014 something that we humans can easily read, understand, and interact with. The method and particular details of a visual rendering very much depend on the purpose for which data is visualized.</p> <p>Methodology: A minimalistic yet extendable vocabulary is proposed to guide visualization based on the data and to allow customization of the visualization via the knowledge graph itself. A plugin-based visualization software architecture implementing the vocabulary is proposed and its main algorithm is described. A software tool implementing the proposed principles is built and published as an open-source project. A few plugins for it (implementing a few visualization types and integrations) are also provided.</p> <p>Findings: A significant portion of this paper has been built from Linked Data using the software being demonstrated, as well as documentation pages for the said software. It is suggested that the toolset facilitates productivity and aids the reuse of knowledge.</p> <p>Value: Knowledge reuse and wider adoption of Linked Data as lingua franca among professionals from various fields promises to improve the quality of making decisions that humanity can afford, which should enhance our ability as a species to tackle the difficult issues we are facing. This work is an attempt to make a small step forward in this direction.</p>"},{"location":"project/whitepaper/#1-introduction","title":"<code>1</code> Introduction","text":"<p>A person who is:</p> <ul> <li>not a specialist in Linked Data per se,</li> <li>but is attempting to leverage Linked Data as a tool for their work or hobby,</li> </ul> <p>\u2014 probably cannot be expected to dive deep into the depths of raw triples. Users would prefer to use tools capable of visualizing the raw triples, converting them into a form better suitable for the human eye.</p> <p>That need is met with Linked Data visualization tools \u2014 software systems that present Linked Data as  lists,  tables,  charts,  maps,  trees,  graphs, or any other form<sup>1</sup> of data visualization imaginable.</p> <p> </p> <p>Over the last decades, significant efforts have been put into visualizing Linked Data. A comprehensive survey of methods and tools as of 2020 is available in the Linked Data Visualization book<sup>2</sup>, the authors of which list, evaluate, and compare a handful of available visualization systems.</p> <p>As an illustration, we are reproducing Table 3.1 from the book here (in Figure 1), which lists several visualization tools, and shows which data types and visualization modes every tool supports. The table was slightly modified before reproduction:</p> <ul> <li>Tools that were not marked as Available in the original are excluded because, from a practical viewpoint of a working professional, they no longer exist;</li> <li>The Setting and Application Type columns are omitted, \u2014 since they say <code>Generic</code> and <code>Web</code> respectively in every row of the table;</li> <li>The original table used single-character codes to denote data and visualization types (for instance, <code>C</code> stands for \"chart\"), \u2014 we create a separate column for each visualization type instead. When viewing this paper as HTML, please hover over an icon to see a tooltip explaining its meaning;</li> <li>The Year column was omitted as it is not immediately informative to us.</li> </ul> Data Types Visualization Types Rhizomer \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f LDVizWiz \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f SynopsViz \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f VisWizard \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f Balloon \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f LP-Vis \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f YDS \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f LPVA \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f \u2714\ufe0f <p>Figure 1. Visualization tools support multiple visualizations<sup>2</sup> (Table 3.1, page 54).</p> <p>See  data &amp;  table definition.</p>"},{"location":"project/whitepaper/#2-shoemakers-son","title":"<code>2</code>  Shoemaker's son","text":"<p>Figure 1 describes only a subset of all visualization tools the book as a whole explores, and it is only one of multiple tables, charts, and timelines the book contains. Nonetheless, none of the data visualizations the book contains are built with any of the visualization tools, or, at least, no mention of such could be found.</p> <p>The authors had put an immense effort into setting up, comparing, and analyzing Linked Data visualization software, but none of the tools they tried gave them an impression that it can aid them in the complex and tedious task of authoring a book, \u2014 a process solely focused on managing and distilling information, a kind of work that Linked Data should be most useful for.</p>"},{"location":"project/whitepaper/#3-can-we-do-better","title":"<code>3</code> Can we do better?","text":"<p>What kind of visualization system would aid a task like preparing the Linked Data Visualization book, or, say, the paper you are so kind and forthcoming to be reading right now?</p> <p>Tables, one of which is rendered in Figure 1, probably constitute the most predominant method of visualizing data; let us formulate this as a criterion the target visualization system has to satisfy.</p> <p>Criterion 1</p> <p>The target visualization tool must be capable of generating tables.</p> <p>The same chunk of data can be rendered differently for different purposes. Figure 2, uses the same data as Figure 1 but shows it a little bit differently.</p> Year Available? Last update Comment Rhizomer 2006 \u2714\ufe0f 2022-12-02 YDS 2017 \u2714\ufe0f 2018-03-01 Balloon 2014 2014-06-30 LDVizWiz 2014 \u2714\ufe0f Could not get this to work. After entering the dbpedia endpoint address, several green active buttons appear but none of those reacts. SynopsViz 2014 \u274c The URL is no longer available. VisWizard 2014 \u274c The URL is no longer available. LP-Vis 2016 \u274c It proved difficult to find the location or information of this system. LPVA 2017 <p>Figure 2. Figure 1 with availability information and notes.</p> <p>See  data &amp;  table definition.</p> <p>In particular,</p> <ul> <li>The Last Update column shows the date of the last changes touching the software, observed as of Spring 2023;</li> <li>The Available column indicates the evaluation of the tools' availability as of Spring 2023;</li> <li>The Comment column offers some notes about how the first two were obtained.</li> </ul> <p>This table is different from the previous one, it highlights different aspects of the data and shows different columns, which brings about another condition:</p> <p>Criterion 2</p> <p>Visualizations must be customizable: for instance, when building a table, we should be able to choose what columns to render, in what order, and how to sort and/or group the data.</p> <p>The list of visualization formats listed as columns in Figure 1 is rather extensive but not exhaustive. There might be narrow-focused, domain-specific visualizations, such as a DNA strand rendering or a chemical formula graph. Other visualizations might be medium-specific, for instance, an interactive representation of a table intended for viewing in virtual reality.</p> <p>We can't predict what kind of visualizations developers would want to build for our system, we should give them freedom to build whatever they want. A restricted, stripped-down language or notation for visualizations would undermine that purpose.</p> <p>Criterion 3</p> <p>Visualizations should be implementable in a Turing complete general-purpose programming language.</p> <p>One singular visualization system can't encompass all imaginable possibilities. A plugin mechanism is necessary to support independent developers writing new exciting visualizations.</p> <p>Criterion 4</p> <p>The target visualization tool must be extendable via plugins implementing various data types and visualization types.</p> <p>While the code that builds the visualization is written in an arbitrary programming language, the user should not be required to be proficient in that language. For instance, if a chart is drawn by a Python program, the user shouldn't have to change Python code to modify the chart colors. What if we use Linked Data itself to describe such variable parameters?</p> <p>Indeed, that would open several appealing advantages. For instance,</p> <ul> <li>Visualizations become easy to share,</li> <li>Visualizations can be tied directly to the nodes they're visualizing,</li> <li>Any additional metadata can be attached to visualizations very easily.</li> </ul> <p>Let's try to go down this path, formalizing it as the following statement.</p> <p>Criterion 5</p> <p>Linked Data visualizations should be themselves expressible as Linked Data.</p> <p>Thus, the role of the visualization system is to consume both data and visualization tied to it and output the rendered result \u2014 in our case, an HTML table. </p> <p>What kind of vocabulary could be used to describe visualizations in Linked Data, then?</p>"},{"location":"project/whitepaper/#4-fresnel-vocabulary","title":"<code>4</code>  Fresnel Vocabulary","text":"<p>Fresnel<sup>3</sup>, last updated in 2005, is a browser-independent vocabulary able to specify how to render an RDF model. Fresnel's two foundational concepts are:</p> <ul> <li>lenses, which might contain nested sublenses, \u2014 define which properties of an RDF resource to display, and how to order them,</li> <li>formats define how to render those properties using<ul> <li>RDF-specific formatting attributes</li> <li>and hooks to  CSS<sup>4</sup>.</li> </ul> </li> </ul> <p>Formats do not output a usable visualization though, they only produce an abstract tree of components known as Abstract Display Model which then can be converted to  HTML,  XML,  PDF, or anything else, \u2014 given that a tool for such conversion exists.</p> <p>The visualization process Fresnel uses is described in Figure 3.</p> <p></p> Figure 3. Fresnel visualization process. (Drawn by hand \u2639.)  <p>Let us analyze, in Figure 4, how Fresnel fits our 6 visualization tool criteria.</p> Criterion Satisfies Notes The target visualization tool must be capable of generating tables. \u2714\ufe0f Fresnel implies HTML generation, and HTML supports tables. Visualizations must be customizable: for instance, when building a table, we should be able to choose what columns to render, in what order, and how to sort and/or group the data. \u2714\ufe0f fresnel:showProperties The visualization method appropriate for a particular node depends on the node itself, its properties, and the context (environment) the node is visualized within. The visualization system should be aware of this relationship and be able to select an appropriate visualization mode based on the data. \ud83e\udd14 Fresnel Domain Properties Visualizations should be implementable in a Turing complete general-purpose programming language. Not applicable: not specified by Fresnel. The target visualization tool must be extendable via plugins implementing various data types and visualization types. \ud83e\udd14 Depends on the browser Linked Data visualizations should be themselves expressible as Linked Data. \u2714\ufe0f Fresnel is an RDF-based visualization description vocabulary, it satisfies this criterion by definition <p>Figure 4. Fresnel &amp; criteria.</p> <p>See  data &amp; table definition</p>"},{"location":"project/whitepaper/#41-fresnelshowproperties","title":"<code>4.1</code> <code>fresnel:showProperties</code>","text":"<p><code>fresnel:showProperties</code> defines an RDF list of properties. Values of these properties will be included in the visualization (see Figure 5). For our table example, this might be leveraged to define the list of table columns and their order. </p> <pre><code>:foafPersonShortLens rdf:type fresnel:Lens ;\n                     fresnel:classLensDomain foaf:Person ;\n                     fresnel:showProperties ( foaf:name\n                                              foaf:mbox\n                                              foaf:homepage ) .\n</code></pre> <p>Figure 5. <code>fresnel:showProperties</code> example in Turtle<sup>5</sup>.</p>"},{"location":"project/whitepaper/#42-fresnel-domain-properties","title":"<code>4.2</code> Fresnel Domain properties","text":"<p>Figure 6 lists the properties defined by Fresnel which help determine which lens and format to use for a particular node.</p> Domain Range Notes fresnel:instanceLensDomain fresnel:Lens Fresnel Selector Specify instances that can be viewed via this Lens fresnel:classLensDomain fresnel:Lens Fresnel Selector Specify classes instances of that can be viewed via this Lens fresnel:propertyFormatDomain fresnel:Format rdf:Property Specify the set of properties to which a format is applicable fresnel:classFormatDomain fresnel:Format Fresnel Selector Specify instances that can be formatted with this Format fresnel:instanceFormatDomain fresnel:Format Fresnel Selector Specify classes instances of that can be formatted with this Format fresnel:sublens fresnel:Lens For a given property mentioned in the Lens definition, specify which lens to use to render that property and its value. <p>Figure 6.   Fresnel Domain properties.  See  data &amp; table definition</p> <p>Fresnel Selector can be one of:</p> <ul> <li>Instance URI,</li> <li>FSL (Fresnel Selector Language) expression as a string,</li> <li> SPARQL<sup>7</sup> query as a string.</li> </ul>"},{"location":"project/whitepaper/#43-plugins","title":"<code>4.3</code>  Plugins","text":"<p>Several RDF visualization tools powered by Fresnel vocabulary have been developed, and a few of them are displayed in Figure 7.</p> Available? Last update Language Plugin support Longwell \u274c Java Piggy Bank \u274c Java Horus \u274c PHP LENA \u274c IsaViz \u2714\ufe0f 2007-10-21 Java \u274c OAT OpenLink AJAX Toolkit (OpenLink Software) \u2714\ufe0f 2012-10-23 Javascript \u274c Marbles \u2714\ufe0f 2013-01-13 Java \u274c <p>Figure 7.   Fresnel-powered tools by their plugin support.    See  data   &amp;  table definition.</p> <p>The tools evaluated either are not available or do not show evidence of a plugin system.</p>"},{"location":"project/whitepaper/#5-template-based-visualization-tools","title":"<code>5</code>  Template-based visualization tools","text":""},{"location":"project/whitepaper/#51-tal4rdf","title":"<code>5.1</code> TAL4RDF","text":"<p>TAL4RDF<sup>6</sup>, or T4R, is a special-purpose template language that serves two distinct goals:</p> <ul> <li>Generate textual content from RDF \u2014 primarily XML and HTML, since TAL4RDF, as its platform technology TAL, employs special attributes for XML tags;</li> <li>Traverse the RDF graph right from within the template.</li> </ul> <p>Example TAL4RDF source is in Figure 8. Author says:</p> <p>Compared to T4R, the strengths of Fresnel are also its weaknesses. Its model is quite complex and not practical for rapid prototyping of templates. Furthermore, the mapping from the abstract box model to concrete syntaxes being not specified in Fresnel, it is not a \"ready to use\" solution for application developers. In fact, we believe that T4R could be used to implement this missing step between Fresnel and concrete formats.</p> <p>TAL4RDF does not implement the discovery of a particular template to use for a given RDF node. This is an extension of Fresnel or another visualization framework but not such a framework itself.</p> <pre><code>&lt;ul tal:define=\"global t4rns:foaf string:http://xmlns.com/foaf/0.1/\"&gt;\n  &lt;li tal:repeat=\"pe foaf:knows\"&gt;\n    &lt;span tal:content=\"pe/id\"&gt;someone I know&lt;/span&gt; works on:\n    &lt;ul&gt;\n      &lt;li tal:repeat=\"pr pe/foaf:currentProject\"&gt;\n        &lt;a tal:attributes=\"href pr/foaf:homepage\" tal:content=\"pr/id\"&gt;a project&lt;/a&gt;\n      &lt;/li&gt;\n    &lt;/ul&gt;\n    &lt;span tal:define=\"past pe/foaf:pastProject\" tal:condition=\"past\"&gt;\n      and also worked on &lt;span tal:content=\"past/count\"&gt;n&lt;/span&gt; project(s) in the past.\n    &lt;/span&gt;\n  &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre> Figure 8. Tal4RDF example"},{"location":"project/whitepaper/#52-less","title":"<code>5.2</code> LESS","text":"<p>LESS<sup>8</sup> is a Linked Data browser based on a template language inspired by Smarty<sup>9</sup>  PHP templates. An interactive template editor aids the user in crafting a template for their particular needs; then, the resulting template can be published on a LESS Repository online and then embedded into various third-party applications:</p> <p>\u2026a blogger writing about a recent trip to Berlin can easily integrate a nicely formatted fact box with important information about Berlin obtained from Wikipedia into her blog post. A community of science fiction fans can integrate lists on a recent BBC programming matching their preferences into their community portal.</p> <p>With Smarty (or any other template language), template reuse seems to pose a challenge. <code>schema:url</code> property on an object will always mean that the object has a hypertext link associated with it. The author of every template out there will have to remember that, \u2014 there is no way to say that <code>schema:url</code> in HTML context is always rendered as an <code>&lt;a&gt;</code> tag. Which seems to be a reason for a lot of repetition among templates. Can we leverage the information already contained in the Linked Data to reduce that kind of repetition? </p>"},{"location":"project/whitepaper/#53-summary","title":"<code>5.3</code> Summary","text":"<ul> <li>Purely template-based tools do not allow to specify, via the Linked Data graph itself, which visualization to choose;</li> <li>Fresnel vocabulary permits that \u2014 but requires the creation of a large tree of lenses so that we can choose particular visualization for even the deepest levels of the tree.</li> </ul>"},{"location":"project/whitepaper/#6-iolanta-visualization-system-by-example","title":"<code>6</code>  Iolanta visualization system by example","text":"<p>This paper proposes an open-source visualization tool by the name of <code>Iolanta</code>. This tool is also used to build parts of this paper.</p> <p>Reproducibility</p> <p>The paper is published on the Web at  iolanta.tech.</p> <p>The source code can be found at  iolanta-tech/iolanta-tech. The repository is equipped with a  <code>README.md</code> file which explains how to clone the repository and run the site locally. Thus, this paper is fully reproducible.</p> <p>Having cloned the repository and installed Iolanta, we can <code>cd</code> to the root directory for the repo, and run the following  shell command:</p> $ iolanta render criterion-context<pre><code>The visualization method appropriate for a particular node depends on the node itself, its properties, and the context (environment) the node is visualized within. The visualization system should be aware of this relationship and be able to select an appropriate visualization mode based on the data.\n</code></pre> <p>We've already seen this text in 3 Can we do better? section and in Figure 4; copy-paste hasn't been involved.</p> <p>The Iolanta rendering process is shown in Figure 9.</p> <p> </p> Figure 9. Iolanta rednering process(drawn by hand \u2639) <p>Let's describe each of these steps in more detail.</p>"},{"location":"project/whitepaper/#61-loading-data-into-graph","title":"<code>6.1</code> Loading data into graph","text":"<p>There is one central place, a text file shown in Figure 10, where the visualization system criteria are sourced from.</p> criterion.yaml<pre><code>$id: Criterion\n$reverse:\nrdf:type:\n- $id: criterion-context\nnumber: 6\nrdfs:label: \"The visualization method appropriate for a particular node depends on the node itself, its properties, and the context (environment) the node is visualized within. The visualization system should be aware of this relationship and be able to select an appropriate visualization mode based on the data.\"\n# \u2702 \u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\n</code></pre> <p>Figure 10. Criteria code. See  <code>criteria.yaml</code></p> <p>This file is written in YAML-LD, which is one of file formats Iolanta natively supports.</p> <ul> <li> <p> JSON-LD<sup>13</sup></p> <p>W3C standard to express Linked Data in JSON<sup>14</sup> data language, which is the de facto lingua franca of modern web technology. It supports conversion from JSON to RDF<sup>10</sup> and back.</p> <p>Extensions: <code>.json</code> <code>.jsonld</code></p> </li> <li> <p> YAML-LD<sup>12</sup></p> <p>Draft (as of spring 2023) W3C Recommendation, which is actually a mapping of JSON-LD \u2192 YAML<sup>11</sup> data format language. YAML maps to JSON, but is much easier to write manually, \u2014 that's why it is widely used to describe configuration files, settings, container and cloud architectures, etc.</p> <p>Extensions: <code>.yaml</code> <code>.yamlld</code></p> </li> <li> <p> Markdown with YAML-LD<sup>12</sup> frontmatter<sup>16</sup></p> <p>Markdown is a simple text format; YAML frontmatter is a piece of YAML located in the beginning of the file and surrounded by <code>---</code> lines.</p> <p>Extension: <code>.md</code></p> </li> </ul> <p>The process of loading data is described in Figure 10.</p> %3 file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/loading-into-graph.yaml/b1 Apply OWL RL processing local_loading-into-graph Iolanta graph is constructed file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/loading-into-graph.yaml/b1:e-&gt;local_loading-into-graph:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/loading-into-graph.yaml/b2 Load each file into its dedicated subgraph file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/loading-into-graph.yaml/b2:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/loading-into-graph.yaml/b1:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/loading-into-graph.yaml/b3 Expand each file using the Default Context + found context.json files file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/loading-into-graph.yaml/b3:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/loading-into-graph.yaml/b2:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/loading-into-graph.yaml/b4 Each file of supported format in the working directory file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/loading-into-graph.yaml/b4:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/loading-into-graph.yaml/b3:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/loading-into-graph.yaml/b5 Files provided by Iolanta plugins file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/loading-into-graph.yaml/b5:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/loading-into-graph.yaml/b3:w <p>Figure 10. Workflow of loading data \u2192 Iolanta graph. See  <code>loading-into-graph.yaml</code></p> <p>Loading files. Iolanta reads recursively each file of a supported format from the working directory, plus \u2014 files provided by installed plugins (we will touch on that again later).</p> <p>Applying contexts. When reading the source files, Iolanta applies a default JSON-LD Context<sup>15</sup>, which implements two important mappings:</p> <ul> <li>Default vocabulary and base IRI is set to <code>local:</code> IRI scheme. That's the scheme every QName is interpreted with.</li> <li>Each <code>@</code>-keyword of JSON-LD (except <code>@context</code> which is not applicable) gains a synonym beginning with <code>$</code> instead.   For instance, <code>$id</code> is an alias of <code>@id</code> JSON-LD keyword. As indicated in YAML-LD Specification, <code>@</code> character which defines JSON-LD keywords is a reserved character in YAML, which means using this character requires quoting, as shown in Figure 11.</li> </ul> <pre><code>\"@id\": criterion-context\n</code></pre> <p>Figure 11. <code>@id</code> keyword must be quoted.</p> <p>In addition, a <code>context.json</code> file in a directory is applied to all files underneath it.</p> <p>Loading into the graph. Every file Iolanta consumes is converted into RDF and loaded into Iolanta Graph \u2014 in-memory, transient RDF dataset. Operations on the dataset, henceforth known as Iolanta Graph, are handled with <code>rdflib</code><sup>17</sup> Python library. </p> <p>OWL RL. When each and every consumable file is consumed, OWL RL<sup>18</sup> logical inference rules are applied to the graph so that RDFS<sup>19</sup> and OWL<sup>20</sup> constructs take effect.</p> <p>From that point, the graph is essentially read only; during the next steps, it will be used as data source to build visualizations from.</p>"},{"location":"project/whitepaper/#62-render-as-text","title":"<code>6.2</code> Render as text","text":"<p>When <code>iolanta</code> command line application is invoked with <code>criterion-context</code> argument, how does it retrieve the corresponding criterion text as shown in Figure 10 to print it to the console? </p> <p>To do that, the system will call <code>iolanta.facets.cli.default.Default</code> Python class, which will do the following:</p> <ul> <li>Via a SPARQL<sup>7</sup> query, find out whether the node being rendered has an <code>rdfs:label</code> property;</li> <li>If yes, print that property.</li> </ul> <p>We call such classes facets. The word facet is defined by Cambridge Dictionary<sup>21</sup> as:</p> <p>one part of a subject, situation, etc. that has many parts</p> <p>or</p> <p>one of the parts or features of something.</p> <p>Criterion 3</p> <p>Visualizations should be implementable in a Turing complete general-purpose programming language.</p> <p>In Iolanta terminology, <code>Facet</code> is a unit of executable program code used to visualize RDF nodes in an Environment. Facet can be described as a black box as displayed in Figure 11.</p> %3 file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/facet-black-box.yaml/b1 Facet local_facet-black-box Rendered visualization file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/facet-black-box.yaml/b1:e-&gt;local_facet-black-box:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/facet-black-box.yaml/b2 RDF node from Iolanta Graph to visualize file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/facet-black-box.yaml/b2:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/facet-black-box.yaml/b1:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/facet-black-box.yaml/b3 Environment to visualize within file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/facet-black-box.yaml/b3:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/facet-black-box.yaml/b1:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/facet-black-box.yaml/b4 Iolanta instance with its Graph file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/facet-black-box.yaml/b4:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/facet-black-box.yaml/b1:w <p>Figure 11. Facet as a black box, its inputs and output. See  <code>facet-black-box.yaml</code></p> RDF Node to visualize <p>Identifier of the node we want to render, such as <code>local:criterion-context</code> on the example above.</p> Environment <p>Identifier of a node that identifies that environment. The Environment might signify:</p> <ul> <li>Type of output (HTML, SVG, \u2026),</li> <li>Parent within which we are serializing (table cell, graph node, point on a line chart, \u2026).</li> </ul> Iolanta instance <p>Contains SPARQL<sup>7</sup> queryable RDF graph that the Facet can use to retrieve necessary information about the node and the environment.</p> Facet <p>Current version of <code>iolanta</code> supports only one kind of Facets: Python classes which are subclasses of <code>iolanta.Facet</code> abstract base class.  We do not store program code of the facets in the graph itself; that seems both inconvenient and insecure. Instead, in the graph facets are addressed via IRIs. For instance, <code>python://iolanta.facets.generic.BoolLiteral</code> is the facet that renders an <code>xsd:boolean</code> value as a Unicode icon.  From this example, it is evident how we identify facets. These are import paths native for Python programming language, which we define by <code>python://</code> protocol.</p> <p>Not every facet suits every possible environment. For instance, if a facet returns a string that contains HTML code that result would be next to useless for a  LaTeX document, and vice versa.</p> <p>The same notion or piece of data might be visualized as a list, a table, or maybe an interactive 3D landscape, but none of those changes the nature of the object being represented. It might be said every representation of an object is another way of looking at it, a new angle, feature, a facet of the object. We want to support that kind of flexibility with Iolanta. To illustrate that, let's now try something different.</p>"},{"location":"project/whitepaper/#63-visualize-criterion-in-an-admonition-box","title":"<code>6.3</code> Visualize criterion in an admonition box","text":"$ iolanta render criterion-context --as iolanta:html<pre><code>!!! question \"Criterion 6\"\n    The visualization method appropriate for a particular node depends on the node itself, its properties, and the context (environment) the node is visualized within. The visualization system should be aware of this relationship and be able to select an appropriate visualization mode based on the data.\n</code></pre> <p>We added the <code>--as</code> argument, and our output has changed. It is a piece of extended Markdown markup suitable for Mkdocs<sup>22</sup> static site generator with mkdocs-material<sup>23</sup> theme. Indeed, inside Mkdocs it is rendered like this:</p> <p>Criterion 6</p> <p>The visualization method appropriate for a particular node depends on the node itself, its properties, and the context (environment) the node is visualized within. The visualization system should be aware of this relationship and be able to select an appropriate visualization mode based on the data.</p> <p>The facet responsible for it is <code>iolanta_tech.facets.criterion.Criterion</code>, and it has been chosen because we specified <code>iolanta:html</code> as the environment for rendering using the <code>--as</code> parameter.</p> <p>This brings us to the question we silently ignored in the previous section: how is the particular facet for the given node selected?</p> <p>Facet selection depends on the environment we are rendering a node within.</p> <ul> <li>In our first example, we didn't specify <code>--as</code>, and Iolanta used its default environment \u2014 <code>iolanta:cli</code> \u2014 which serves printing to console;</li> <li>In the second example, we specified <code>iolanta:html</code> explicitly.</li> </ul>"},{"location":"project/whitepaper/#7-facet-selection-algorithm","title":"<code>7</code> Facet selection algorithm","text":"<p>Figure 12 illustrates the piece of YAML-LD code that helps Iolanta choose the correct facet. We can see that <code>Criterion</code> class has two facets connected to it via <code>iolanta:hasInstanceFacet</code> property.</p> <ul> <li><code>Default</code> facet that's going to be used in table cells;</li> <li><code>Criterion</code> facet which will render Markdown markup.</li> </ul> facets.yaml<pre><code>$id: Criterion\niolanta:hasInstanceFacet:\n- $id: python://iolanta_tech.facets.Criterion\niolanta:supports:\n- $id: iolanta:html\n- $id: local:satisfied\n- $id: local:failed\n- $id: python://iolanta.facets.html.Default\n</code></pre> <p>Figure 12. Facet definitions for Criteria. See  <code>facets.yaml</code></p> <p>iolanta:hasInstanceFacet</p> <p>Facet assigned by node type.</p> <ul> <li>Domain: <code>rdfs:Class</code></li> <li>Range: <code>iolanta:Facet</code></li> <li>Inverse: <code>iolanta:isInstanceFacetOf</code></li> </ul> <p>With <code>iolanta:supports</code>, we also define the environments given facet can operate in. <code>Criterion</code> facet rendering will look differently for the default <code>iolanta:html</code> environment versus special environments for <code>failed</code> and <code>satisfied</code> criteria.</p> <p>iolanta:supports</p> <p>Specify that facet can work in the specific environment.</p> <ul> <li>Domain: <code>iolanta:Facet</code></li> <li>Range: <code>iolanta:Environment</code></li> <li>Inverse: <code>iolanta:isSupportedBy</code></li> </ul> <p>Generally, rendering of an object depends on the environment the object is rendered within. The easiest example would be HTML vs LaTeX output; for a more practical example, it might be considered how this paper renders the criteria for a visualization system differently depending on context:</p> <ul> <li>as plain text within a table cell at Figure 4,</li> <li>or a block (called an admonition) within the body of the article itself:</li> </ul> <p>Criterion 6</p> <p>The visualization method appropriate for a particular node depends on the node itself, its properties, and the context (environment) the node is visualized within. The visualization system should be aware of this relationship and be able to select an appropriate visualization mode based on the data.</p> <p>Within Fresnel, this can be solved using <code>fresnel:sublens</code> property:</p> <ul> <li>The <code>Paper</code> lens will specify that <code>Criterion</code> object has to be rendered with <code>Admonition</code> sub-lens,</li> <li>while the <code>TableCell</code> lens will render it using <code>Label</code> sub-lens.</li> </ul> <p>This calls for a huge tree of lenses to define rendering of the whole paper \u2014 or the whole book. Is it really necessary?</p> <p>Figure 14 describes the facet search algorithm Iolanta is implementing.</p> %3 file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/algorithm.yaml/b1 iolanta:hasDefaultFa cet local_algorithm-roadmap Rendered visualization file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/algorithm.yaml/b1:e-&gt;local_algorithm-roadmap:w file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/algorithm.yaml/b2 How to render a given node? local_iolanta-facet iolanta:facet file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/algorithm.yaml/b2:e-&gt;local_iolanta-facet:w local_iolanta-facet:e-&gt;local_algorithm-roadmap:w local_iolanta-has-instance-facet iolanta:hasInstanceF acet local_iolanta-facet:e-&gt;local_iolanta-has-instance-facet:w local_iolanta-has-instance-facet:e-&gt;file_///home/runner/work/iolanta-tech/iolanta-tech/docs/project/whitepaper/algorithm.yaml/b1:w local_iolanta-has-instance-facet:e-&gt;local_algorithm-roadmap:w <p>Figure 14. Iolanta facet search algorithmSee  <code>algorithm.yaml</code></p> <p><code>Environment</code> is an <code>rdfs:Class</code> defined by Iolanta base vocabulary.</p> <p>iolanta:Environment</p> <p>Data visualization might be performed in various contexts, which we call Environments. For instance:</p> <ul> <li><code>iolanta:html</code> calls for HTML output;</li> <li><code>iolanta:cli</code> is for rendering in the command line;</li> <li><code>iolanta:tex</code> is for LaTeX documents.</li> </ul> <p>We will provide more examples for Environments later.</p> <p>As we can see, <code>iolanta:hasInstanceFacet</code> is not the only relation from objects to facets Iolanta cares about. The top priority is <code>iolanta:facet</code> which links an individual node, instead of a class, directly to the facet that should be used to render that particular node.</p> <p>iolanta:facet</p> <p>Facet assigned by particular node. This property might be attached to any IRI or BNode in an RDF graph.</p> <ul> <li>Range: <code>iolanta:Facet</code></li> <li>Inverse: <code>iolanta:isFacetOf</code></li> </ul> <pre><code>    :something iolanta:facet &lt;python://iolanta.facets.html.Default&gt; .\n</code></pre> <p>In case <code>iolanta:facet</code> and <code>iolanta:hasInstanceFacet</code> weren't found for the node in question, we fall back to the default facet assigned to the Environment. That's how our first CLI example worked: <code>Default</code> facet is configured as:</p> <p>iolanta:hasDefaultFacet</p> <p>Define a default facet used for that environment.</p> <ul> <li>Domain: <code>iolanta:Environment</code></li> <li>Range: <code>iolanta:Facet</code></li> <li>Inverse: <code>iolanta:isDefaultFacetOf</code></li> </ul> <p><code>iolanta</code> operation is based on a simple vocabulary, bundled with the application and drawn, as a diagram, in Figure 15. Iolanta vocabulary defines a few classes and a few properties connecting classes to each other.</p> <p>Prefix we use is <code>iolanta:</code>, and it resolves to https://iolanta.tech/.</p> Figure 15. <code>iolanta:</code> vocabulary (Drawn by hand \u2639) <p>The existence of Iolanta vocabulary closes the following criterion.</p> <p>Criterion 5</p> <p>Linked Data visualizations should be themselves expressible as Linked Data.</p> <p>To conclude this section, \u2014 Iolanta facet search algorithm aims to satisfy one of the criteria we listed. Here it is:</p> <p>Criterion 6</p> <p>The visualization method appropriate for a particular node depends on the node itself, its properties, and the context (environment) the node is visualized within. The visualization system should be aware of this relationship and be able to select an appropriate visualization mode based on the data.</p>"},{"location":"project/whitepaper/#8-integration-mkdocs","title":"<code>8</code> Integration: MkDocs","text":"<p>Printing visualizations in the console might be fun \u2014 but not too useful if we want to embed them into a book or in a paper, like this one.</p> <p>For that purpose, we have <code>mkdocs-iolanta</code><sup>26</sup> plugin which integrates Iolanta with MkDocs<sup>22</sup> static site generator. Syntax for embedding visualizations is provided by Jinja2<sup>24</sup> template engine and looks like this:</p> <pre><code>{{ render('criterion-context', environments=['satisfied']) }}\n</code></pre> <p>The output of this is an extension to Markdown markup known as Admonitions<sup>25</sup>.</p>"},{"location":"project/whitepaper/#9-plugin-iolanta-tables","title":"<code>9</code>  Plugin: <code>iolanta-tables</code>","text":"<p>Iolanta supports plugins, which aims to satisfy the following criterion.</p> <p>Criterion 4</p> <p>The target visualization tool must be extendable via plugins implementing various data types and visualization types.</p> <p>The Criteria 1-6 we used as an example of rendering are quite simple to work with; they feature no nested environments, for example.</p> <p><code>iolanta-tables</code><sup>28</sup> is an Iolanta plugin that implements more complex structures. We used it to render Figure 1 and Figure 4 from YAML-LD definitions.</p> <p>It has its own vocabulary to define tables.</p> <p>Figure 16 shows a piece of code describing the data.</p> various-visualizations.yaml<pre><code>$id: VisualizationTool\n$reverse:\nrdf:type:\n- $id: rhizomer\navailable: yes\nrdfs:label: Rhizomer\nschema:url: https://github.com/rhizomik/rhizomerEye\nlast-update: 2022-12-02\nyear: 2006\nnumeric: yes\ntemporal: yes\nspatial: yes\nhierarchical: yes\ngraph: yes\nchart: yes\nmap: yes\n# \u2702 \u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\n</code></pre> <p>Figure 16. Visualization tools file. See  <code>various-visualizations.yaml</code> in the Supplementary Material.</p> <pre><code>$id: table:Table\nrdfs:comment: \"Definition of a table.\"\niolanta:hasInstanceFacet:\n- $id: python://iolanta_tables.facets.html.Table\niolanta:supports:\n$id: iolanta:html\n</code></pre> <p>In the snippet in Figure 14, we introduced a new <code>table:self</code> column. That's not a property, say, <code>rhizomer</code> has; it means that we render the node itself (the <code>rhizomer</code> node) \u2014 and for that the <code>Default</code> facet we already know will be employed, \u2014 which will be presented as a clickable HTML link.</p> <p>On the snippet at Figure 15, we define <code>mkdocs-material:icon</code> property to use mkdocs<sup>22</sup> specific icon as column header.</p> <p>Figure 1 is visualized from the description in Figure 17:</p> table.yaml<pre><code>$id: tools-with-various-visualizations\ntable:columns:\n- table:self\n- rdfs:label: Data Types\ntable:columns:\n- $id: numeric\nmkdocs-material:icon: material/numeric.svg\nrdfs:comment: \"Numeric\"\nrdfs:label: \" \"\n\n- $id: temporal\nmkdocs-material:icon: material/timer-sand.svg\nrdfs:comment: Temporal\nrdfs:label: \" \"\n\n- $id: spatial\n# \u2702 \u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\n</code></pre> Figure 17. Visualization tools table file <p>Here, we use nested <code>table:columns</code> properties to group columns.</p> <p>The following criterion is thus satisfied:</p> <p>Criterion 1</p> <p>The target visualization tool must be capable of generating tables.</p>"},{"location":"project/whitepaper/#conclusions","title":"Conclusions","text":"<p>We have presented the Iolanta visualization system and provided a few examples of how it works on real data. We also have shown how it integrates with other systems \u2014 for instance, to aid in building this paper.</p> <p>We have shown a few plugins currently built for Iolanta.</p> <p>Directions for future research might include:</p> <ul> <li>Implement more plugins for various use cases, such as:<ul> <li>roadmaps &amp; network planning,</li> <li>software architecture diagrams,</li> <li>and more;</li> </ul> </li> <li>Implement more environments, such as:<ul> <li>LaTeX,</li> <li>CLI;</li> </ul> </li> <li>Integrate with remote datasets like DBPedia<sup>29</sup>;</li> <li>Integrate with IPFS;</li> <li>Provide interactive browsing experience.</li> </ul> <ol> <li> <p>USI eLab. A periodic table of visualization methods.\u00a0\u21a9</p> </li> <li> <p>Linked Data Visualization: Techniques, Tools and Big Data. \u2014 Laura Po, Nikos Bikakis, Federico Desimoni, and George Papastefanatos | Morgan &amp; Claypool, 2020.\u00a0\u21a9\u21a9</p> </li> <li> <p>Pietriga, E., Bizer, C., Karger, D., Lee, R. (2006). Fresnel: A Browser-Independent Presentation Vocabulary for RDF. In: , et al. The Semantic Web - ISWC 2006. ISWC 2006. Lecture Notes in Computer Science, vol 4273. Springer, Berlin, Heidelberg. https://doi.org/10.1007/11926078_12\u00a0\u21a9</p> </li> <li> <p>CSS: Cascading Style Sheets language.\u00a0\u21a9</p> </li> <li> <p>Beckett, D., Berners-Lee, T., Prud\u2019hommeaux, E., &amp; Carothers, G. (2014). RDF 1.1 Turtle. World Wide Web Consortium, 18-31.\u00a0\u21a9</p> </li> <li> <p>Champin, P. A. (2009). Tal4Rdf: Lightweight Presentation for the Semantic Web. In SFSW@ ESWC. \u2014 https://ceur-ws.org/Vol-449/Paper1.pdf\u00a0\u21a9</p> </li> <li> <p>Prud\u2019hommeaux, E., Seaborne, A.: SPARQL query language for RDF. W3C recommendation, W3C (2008) http://www.w3.org/TR/rdf-sparql-query/.\u00a0\u21a9\u21a9\u21a9</p> </li> <li> <p>Auer, S\u00f6ren &amp; Doehring, Raphael &amp; Tramp, Sebastian. (2010). LESS - Template-Based Syndication and Presentation of Linked Data. 6089. 211-224. 10.1007/978-3-642-13489-0_15.\u00a0\u21a9</p> </li> <li> <p>Smarty templating engine. https://smarty.net \u21a9</p> </li> <li> <p>RDF Working Group. (2014). Resource Description Framework (RDF). Semantic Web Standards.\u00a0\u21a9</p> </li> <li> <p>YAML Ain\u2019t Markup Language (YAML\u2122) version 1.2. Revision 1.2.2 (2021-10-01). https://yaml.org/spec/1.2.2 \u21a9</p> </li> <li> <p> <code>json-ld/yaml-ld</code> \u21a9\u21a9</p> </li> <li> <p>JSON-LD. https://json-ld.org \u21a9</p> </li> <li> <p>JSON. https://json.org \u21a9</p> </li> <li> <p> <code>iolanta/data/context.yaml</code> \u21a9</p> </li> <li> <p>YAML Frontmatter. https://jekyllrb.com/docs/front-matter/ \u21a9</p> </li> <li> <p> <code>rdflib/rdflib</code> \u21a9</p> </li> <li> <p> <code>rdflib/owl-rl</code> \u21a9</p> </li> <li> <p>McBride, B. (2004). The resource description framework (RDF) and its vocabulary description language RDFS. Handbook on ontologies, 51-65.\u00a0\u21a9</p> </li> <li> <p>Motik, B., Patel-Schneider, P. F., Parsia, B., Bock, C., Fokoue, A., Haase, P., ... &amp; Smith, M. (2009). OWL 2 web ontology language: Structural specification and functional-style syntax. W3C recommendation, 27(65), 159.\u00a0\u21a9</p> </li> <li> <p>Facet. Cambridge Dictionary. https://dictionary.cambridge.org/dictionary/english/facet \u21a9</p> </li> <li> <p>MkDocs. mkdocs.org \u21a9\u21a9\u21a9</p> </li> <li> <p>mkdocs-material. https://squidfunk.github.io/mkdocs-material/ \u21a9</p> </li> <li> <p>Jinja. https://jinja.palletsprojects.com \u21a9</p> </li> <li> <p>Admonitions for <code>mkdocs-material</code>.\u00a0\u21a9</p> </li> <li> <p> <code>iolanta-tech/mkdocs-iolanta</code> \u21a9</p> </li> <li> <p> <code>fralau/mkdocs_macros_plugin</code> \u21a9</p> </li> <li> <p>Iolanta Tables. https://iolanta.tech/tables \u21a9</p> </li> <li> <p>Auer, S., Bizer, C., Kobilarov, G., Lehmann, J., Cyganiak, R., &amp; Ives, Z. (2007). Dbpedia: A nucleus for a web of open data. In The Semantic Web: 6th International Semantic Web Conference, 2nd Asian Semantic Web Conference, ISWC 2007+ ASWC 2007, Busan, Korea, November 11-15, 2007. Proceedings (pp. 722-735). Springer Berlin Heidelberg.\u00a0\u21a9</p> </li> </ol>"},{"location":"roadmap/project/decisions/choose-js-renderer/","title":"Choose js renderer","text":"Supports roadmap d3js \u274c flowchart.js \u274c GoJS \u2714\ufe0f FlowJS \u2714\ufe0f Drawflow \u2714\ufe0f DiagramFlowJS Pinker.js vis.js SigmaJS"},{"location":"tables/","title":"iolanta-tables","text":"<ul> <li> <p> Markdown rocks!</p> <p>It is a simple, readable, lightweight text formatting language, widely used to build, for instance, static sites and project documentation.</p> </li> <li> <p> \u2026but its tables do not \u2639</p> <p>Markdown has syntax for tables, but it is a pain to write, read, and especially maintain.</p> </li> <li> <p> Generate them from YAML with Iolanta!</p> <p>Write your table definition as a YAML file and get an HTML table rendered for you.</p> </li> </ul>"},{"location":"tables/#like-this","title":"Like this:","text":"earth-like-planets.yaml<pre><code>$id: earth-like-planets\ntable:columns:\n- name\n- radius\n- rdfs:label: Weather\ntable:columns:\n- atmosphere\n- $id: temperatures\nrdfs:label: \"t (\u00b0C)\"\ntable:rows:\n- name: Mercury\nradius: 2439\natmosphere: no\ntemperatures: -20\u2026430\n- name: Venus\nradius: 6051\natmosphere: yes\ntemperatures: 438\u2026482\n- name: Earth\nradius: 6371\natmosphere: yes\ntemperatures: -89\u202656\n</code></pre> Name Radius Weather Atmosphere t (\u00b0C) Mercury 2439 \u274c -20\u2026430 Venus 6051 \u2714\ufe0f 438\u2026482 Earth 6371 \u2714\ufe0f -89\u202656"},{"location":"tables/#installation","title":"Installation","text":"<pre><code>pip install iolanta-tables\n</code></pre> <p>MkDocs</p> <p>For integration with MkDocs, see mkdocs.iolanta.tech.</p>"},{"location":"tables/class/","title":"table:class","text":"<p>Just as table:rows, this keyword permits to specify data for the table, but it does so from a different perspective.</p> jedi.yaml<pre><code>- $id: jedi\ntable:class: Jedi\ntable:columns:\n- name\n\n- name: Yoda\n$type: Jedi\n\n- name: Anakin Skywalker\n$type: Jedi\n\n- name: Obi-wan Kenobi\n$type: Jedi\n</code></pre> Name Yoda Anakin Skywalker Obi-wan Kenobi <p>Here, we define several objects of <code>Jedi</code> class using $type keyword. Having done that, we can instruct the table to render all instances of that class.</p> <p>Note that we don't have to define the class itself anyhow. The system is smart enough to guess that <code>Jedi</code> is a class from the fact that we used it for <code>$type</code> keyword.</p>"},{"location":"tables/columns/","title":"<code>table:columns</code>","text":"<p>List columns of a table. Order is preserved.</p>"},{"location":"tables/columns/#shorthand","title":"Shorthand","text":"samples/simple.yaml<pre><code># \u2702 \u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\ntable:columns:\n- name\n- color\n- birthday\n# \u2702 \u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\n</code></pre> <p>Every column listed in this format is a global identifier (is interpreted as $id). However, in this form you cannot define <code>title</code> or other properties of a column. For that, the longhand form is required.</p>"},{"location":"tables/columns/#lengthy-form","title":"Lengthy form","text":"samples/arda-countries.yaml<pre><code># \u2702 \u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\ntable:columns:\n- $id: country-name\ntitle: Name of the country\n# \u2702 \u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\n</code></pre> <p>The nature of <code>country-name</code> as a global identifier is now revealed.</p>"},{"location":"tables/columns/#nested-columns","title":"Nested columns","text":"tables/examples/earth-like-planets.yaml<pre><code># \u2702 \u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\n- name\n- radius\n- rdfs:label: Weather\ntable:columns:\n- atmosphere\n- $id: temperatures\nrdfs:label: \"t (\u00b0C)\"\ntable:rows:\n# \u2702 \u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\n</code></pre> <p>See result at the home page for iolanta-tables.</p>"},{"location":"tables/direction/","title":"table:direction","text":"<p>Belongs to table:order-by section and defines ordering direction.</p>"},{"location":"tables/direction/#values","title":"Values","text":"<ul> <li><code>asc</code> (the default),</li> <li><code>desc</code></li> </ul>"},{"location":"tables/direction/#example","title":"Example","text":"star-trek-characters-ordered-desc.yaml<pre><code>$id: star-trek-characters-ordered-desc\n\ntable:columns:\n- name\n- origin\n- shirt-color\n\ntable:class: StarTrekCharacter\n\ntable:order-by:\n- origin:\ntable:direction: desc\ntable:empty-values: first\n- shirt-color\n</code></pre> Name Origin Shirt color Spock \ud83d\udd96 Vulcan \ud83d\udd35 James T. Kirk \ud83c\udf0e Earth / West \ud83d\udfe1 Leonard McCoy \ud83c\udf0e Earth / West \ud83d\udd35 Janice Rand \ud83c\udf0e Earth / West \ud83d\udd34 Montgomery Scott \ud83c\udf0d Earth / East \ud83d\udd34 Pavel Chekhov \ud83c\udf0d Earth / East \ud83d\udfe1 Niyota Uhura \ud83c\udf0d Earth / East \ud83d\udd34 Hikaru Sulu \ud83c\udf0d Earth / East \ud83d\udfe1 Christine Chapel \ud83c\udf0d Earth / East \ud83d\udd35"},{"location":"tables/empty-values/","title":"table:empty-values","text":"<p>Belongs to table:order-by section and defines ordering for empty (missing) values.</p>"},{"location":"tables/empty-values/#values","title":"Values","text":"<ul> <li><code>first</code> (the default),</li> <li><code>last</code></li> </ul>"},{"location":"tables/empty-values/#example","title":"Example","text":"star-trek-characters-ordered-nullable.yaml<pre><code>$id: star-trek-characters-ordered-nullable\n\ntable:columns:\n- name\n- origin\n- rank\n\ntable:class: StarTrekCharacter\n\ntable:order-by:\n- origin\n- rank:\ntable:empty-values: last\n</code></pre> Name Origin Rank Pavel Chekhov \ud83c\udf0d Earth / East Hikaru Sulu \ud83c\udf0d Earth / East Christine Chapel \ud83c\udf0d Earth / East Montgomery Scott \ud83c\udf0d Earth / East Chief Engineer Niyota Uhura \ud83c\udf0d Earth / East Communications Officer James T. Kirk \ud83c\udf0e Earth / West Leonard McCoy \ud83c\udf0e Earth / West Janice Rand \ud83c\udf0e Earth / West Spock \ud83d\udd96 Vulcan"},{"location":"tables/order-by/","title":"table:order-by","text":"<p>Specifies the column we are sorting table contents by.</p> simple.yaml<pre><code>$id: my-cats\n\ntable:columns:\n- name\n- color\n- birthday\n\ntable:rows:\n- name: Ray\ncolor: Red\nbirthday: 2010-01-01\n- name: Smoky\ncolor: Gray\nbirthday: 2010-12-10\n\ntable:order-by: birthday\n</code></pre> Name Color Birthday Ray Red 2010-01-01 Smoky Gray 2010-12-10"},{"location":"tables/order-by/#multiple-fields","title":"Multiple fields","text":"star-trek-characters-ordered.yaml<pre><code>$id: star-trek-characters-ordered\n\ntable:columns:\n- name\n- origin\n- shirt-color\n\ntable:class: StarTrekCharacter\n\ntable:order-by:\n- origin\n- shirt-color\n</code></pre> Name Origin Shirt color Montgomery Scott \ud83c\udf0d Earth / East \ud83d\udd34 Niyota Uhura \ud83c\udf0d Earth / East \ud83d\udd34 Christine Chapel \ud83c\udf0d Earth / East \ud83d\udd35 Pavel Chekhov \ud83c\udf0d Earth / East \ud83d\udfe1 Hikaru Sulu \ud83c\udf0d Earth / East \ud83d\udfe1 Janice Rand \ud83c\udf0e Earth / West \ud83d\udd34 Leonard McCoy \ud83c\udf0e Earth / West \ud83d\udd35 James T. Kirk \ud83c\udf0e Earth / West \ud83d\udfe1 Spock \ud83d\udd96 Vulcan \ud83d\udd35"},{"location":"tables/order-by/#options","title":"Options","text":"<ul> <li>table:direction</li> <li>table:empty-values</li> </ul>"},{"location":"tables/rows/","title":"table:rows","text":"<p>Provide data for the table as list of rows, where every row specifies values per column:</p> samples/simple.yaml<pre><code># \u2702 \u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\ntable:rows:\n- name: Ray\ncolor: Red\nbirthday: 2010-01-01\n- name: Smoky\ncolor: Gray\nbirthday: 2010-12-10\n# \u2702 \u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\u22ef\n</code></pre> <p>If a value for a column is missing, it will be rendered as empty. If an extra column (not listed in <code>table:columns</code>) is provided then it will be ignored in this table. (But it can be rendered in other tables or other widgets.)</p> several-planets.yaml<pre><code>$id: several-planets\n\ntable:columns:\n- $id: name\ntitle: Name\n- $id: satellite-count\ntitle: Satellite Count\n\ntable:rows:\n- name: Earth\nsatellite-count: 1\n- name: Venus\nclouds-consist-of: acid\n</code></pre> Name Satellite Count Earth 1 Venus"},{"location":"tables/self/","title":"table:self","text":"<p>Use this as a column (in table:columns and perhaps in table:order-by) to render a representation of the whole row instead of a particular column.</p> <p>With default implementation this means that the following properties will be taken in account for rendering:</p> <ul> <li>rdfs:label</li> <li>schema:url</li> </ul> self.yaml<pre><code>$id: self\ntable:columns:\n- table:self\ntable:rows:\n- rdfs:label: iolanta.tech\nschema:url: https://iolanta.tech\n- rdfs:label: mkdocs.iolanta.tech\nschema:url: https://mkdocs.iolanta.tech\n</code></pre> iolanta.tech mkdocs.iolanta.tech"},{"location":"tables/project/facets/","title":"Facets","text":"<ul> <li>Table instance<ul> <li>Environment for:<ul> <li>TableHead facet,<ul> <li>Which is environment for Th facet,</li> </ul> </li> <li>TableBody facet,<ul> <li>Which is environment for Tr facet.</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"vocabularies/","title":"Vocabularies","text":""},{"location":"vocabularies/id/","title":"$id","text":"<p>Defines a unique identifier for something. Identifiers are case sensitive. For instance:</p> <p>Our cats table is now globally identified as <code>my-cats</code>. You can render it on any page of the site by this name:</p> simple.yaml<pre><code>$id: my-cats\n\ntable:columns:\n- name\n- color\n- birthday\n\ntable:rows:\n- name: Ray\ncolor: Red\nbirthday: 2010-01-01\n- name: Smoky\ncolor: Gray\nbirthday: 2010-12-10\n\ntable:order-by: birthday\n</code></pre> Name Color Birthday Ray Red 2010-01-01 Smoky Gray 2010-12-10"},{"location":"vocabularies/id/#other-uses","title":"Other uses","text":"<p>Unique identifiers can be assigned to rows, columns, and generally to any node of Iolanta graph. For instance:</p> arda-countries.yaml<pre><code>$id: arda-countries\n\ntable:columns:\n- $id: country-name\ntitle: Name of the country\n\ntable:rows:\n- country-name: Angmar\n$id: angmar\n- country-name: Mordor\n- country-name: Gondor\n</code></pre> Name of the country Angmar Mordor Gondor <p>Here, <code>country-name</code> becomes a global identifier. Check {{ render(\u2026) }} to see how to use it.</p>"},{"location":"vocabularies/id/#prefixes","title":"Prefixes","text":"<p>Identifiers can have prefixes. For instance, <code>table:columns</code> is an identifier which has <code>table:</code> prefix. That prefix is associated with a URL:</p> <ul> <li><code>table:</code> = <code>https://mkdocs.iolanta.tech/tables/</code></li> <li>and therefore <code>table:columns</code> = <code>https://mkdocs.iolanta.tech/tables/columns</code></li> </ul> <p>whence you can find a page describing what <code>table:columns</code> really means ;)</p> <p>This self-documenting trait of identifiers is widely used in Iolanta ecosystem.</p>"},{"location":"vocabularies/type/","title":"$type","text":"<p>Define type for something. This is most useful in conjunction with https://iolanta.tech/tables/class:</p> samples/star-trek-characters.yaml<pre><code>- name: Spock\norigin: \ud83d\udd96 Vulcan\nshirt-color: \ud83d\udd35\n$type: StarTrekCharacter\n- name: James T. Kirk\norigin: \ud83c\udf0e Earth / West\nshirt-color: \ud83d\udfe1\n$type: StarTrekCharacter\n- name: Leonard McCoy\norigin: \ud83c\udf0e Earth / West\nshirt-color: \ud83d\udd35\n$type: StarTrekCharacter\n- name: Montgomery Scott\norigin: \ud83c\udf0d Earth / East\nshirt-color: \ud83d\udd34\nrank: Chief Engineer\n$type: StarTrekCharacter\n- name: Pavel Chekhov\norigin: \ud83c\udf0d Earth / East\nshirt-color: \ud83d\udfe1\n$type: StarTrekCharacter\n- name: Niyota Uhura\norigin: \ud83c\udf0d Earth / East\nshirt-color: \ud83d\udd34\nrank: Communications Officer\n$type: StarTrekCharacter\n- name: Hikaru Sulu\norigin: \ud83c\udf0d Earth / East\nshirt-color: \ud83d\udfe1\n$type: StarTrekCharacter\n- name: Christine Chapel\norigin: \ud83c\udf0d Earth / East\nshirt-color: \ud83d\udd35\n$type: StarTrekCharacter\n- name: Janice Rand\norigin: \ud83c\udf0e Earth / West\nshirt-color: \ud83d\udd34\n$type: StarTrekCharacter\n</code></pre> <p>and</p> star-trek-characters-ordered.yaml<pre><code>$id: star-trek-characters-ordered\n\ntable:columns:\n- name\n- origin\n- shirt-color\n\ntable:class: StarTrekCharacter\n\ntable:order-by:\n- origin\n- shirt-color\n</code></pre> Name Origin Shirt color Montgomery Scott \ud83c\udf0d Earth / East \ud83d\udd34 Niyota Uhura \ud83c\udf0d Earth / East \ud83d\udd34 Christine Chapel \ud83c\udf0d Earth / East \ud83d\udd35 Pavel Chekhov \ud83c\udf0d Earth / East \ud83d\udfe1 Hikaru Sulu \ud83c\udf0d Earth / East \ud83d\udfe1 Janice Rand \ud83c\udf0e Earth / West \ud83d\udd34 Leonard McCoy \ud83c\udf0e Earth / West \ud83d\udd35 James T. Kirk \ud83c\udf0e Earth / West \ud83d\udfe1 Spock \ud83d\udd96 Vulcan \ud83d\udd35"},{"location":"vocabularies/rdfs/label/","title":"<code>rdfs:label</code>","text":"<p>Human-readable name of an object.</p> self.yaml<pre><code>$id: self\ntable:columns:\n- table:self\ntable:rows:\n- rdfs:label: iolanta.tech\nschema:url: https://iolanta.tech\n- rdfs:label: mkdocs.iolanta.tech\nschema:url: https://mkdocs.iolanta.tech\n</code></pre> iolanta.tech mkdocs.iolanta.tech"},{"location":"vocabularies/schema/url/","title":"<code>schema:url</code>","text":"<p>Assign a URL to something and then render it with a clickable link.</p> self.yaml<pre><code>$id: self\ntable:columns:\n- table:self\ntable:rows:\n- rdfs:label: iolanta.tech\nschema:url: https://iolanta.tech\n- rdfs:label: mkdocs.iolanta.tech\nschema:url: https://mkdocs.iolanta.tech\n</code></pre> iolanta.tech mkdocs.iolanta.tech"}]}